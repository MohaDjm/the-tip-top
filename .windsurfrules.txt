.windsurfrules# Règles du Projet Thé Tip Top - Jeu Concours

## CHARTE GRAPHIQUE OBLIGATOIRE

### Couleurs (NE JAMAIS CHANGER)
- Vert principal : `#2C5545` (the-green) - Logos, titres, boutons primaires
- Doré : `#D4B254` (the-gold) - Accents, "100% gagnant", hover
- Beige : `#F5F1E6` (the-beige) - Fonds de cards
- Gris texte : `#3A3A3A` (the-gray) - Textes longs
- Vert foncé : `#1A3A2E` (the-dark-green) - Variantes

### Typographie (TOUJOURS RESPECTER)
- Titres : `font-playfair` (Playfair Display)
  - H1 : 72px
  - H2 : 48px  
  - H3 : 36px
- Textes : `font-lato` (Lato)
  - Body : 16px Regular
  - Boutons : 16px Bold MAJUSCULES

### Composants UI
- Boutons : Hauteur 48px, padding 24px, border-radius 8px
- Cards : Background beige, border-radius 12px, padding 24px
- Inputs : Hauteur 48px, border 2px, focus doré

## STRUCTURE TECHNIQUE

### Frontend (Next.js 14)
- Utiliser App Router UNIQUEMENT (pas de pages/)
- TypeScript strict (no any)
- Server Components par défaut
- Client Components uniquement si nécessaire ('use client')
- Tailwind CSS avec classes personnalisées du projet

### Backend (Node.js + Express)
- Architecture en couches : routes → controllers → services → repositories
- Validation Joi sur toutes les entrées
- Middleware d'authentification JWT
- Gestion d'erreurs centralisée
- Logs structurés avec Winston

### Base de données (PostgreSQL + Prisma)
- Transactions pour opérations critiques
- Indexes sur : code, userId, status
- Soft delete pour données utilisateurs (RGPD)

## FONCTIONNALITÉS MÉTIER

### Jeu Concours
- 500 000 codes maximum pré-générés
- Code unique 10 caractères alphanumériques
- Répartition EXACTE des gains :
  - 60% : Infuseur à thé (8€)
  - 20% : Boîte détox 100g (12€)
  - 10% : Boîte signature 100g (18€)
  - 6% : Coffret découverte (39€)
  - 4% : Coffret premium (69€)
  - Tirage au sort : 1 an de thé (360€)

### Validation des codes
- Vérifier : format, unicité, validité temporelle, non utilisé
- Transaction atomique pour attribution
- QR code généré pour récupération en boutique
- Expiration après 30 jours

## SÉCURITÉ

### Obligatoire sur TOUTES les routes
- Rate limiting (100 req/15min)
- Validation des entrées (Joi/Zod)
- Sanitization XSS
- Protection CSRF
- Headers sécurisés (Helmet)

### Authentification
- JWT avec refresh tokens
- OAuth2 Google et Facebook
- Bcrypt rounds : 10
- Session Redis TTL : 7 jours

### RGPD
- Consentement explicite requis
- Droit à l'oubli implémenté
- Export des données utilisateur
- Logs d'audit pour traçabilité

## PATTERNS DE CODE

### React/Next.js
```tsx
// TOUJOURS utiliser ce pattern pour les composants
import { FC } from 'react'

interface ComponentProps {
  // Props typées
}

const Component: FC<ComponentProps> = ({ props }) => {
  // Hooks en haut
  // Logique
  // Return JSX avec classes Tailwind du projet
}

export default Component
```

### API Endpoints
```ts
// TOUJOURS cette structure
router.post('/endpoint',
  authenticate,           // Auth middleware
  validate(schema),       // Validation Joi
  rateLimit,             // Rate limiting
  async (req, res, next) => {
    try {
      // Logique
      res.json({ success: true, data })
    } catch (error) {
      next(error) // Gestion centralisée
    }
  }
)
```

### Prisma Queries
```ts
// TOUJOURS avec try-catch et transactions si nécessaire
const result = await prisma.$transaction(async (tx) => {
  // Opérations multiples
})
```

## TESTS

### Coverage minimum
- Unitaires : 85%
- Intégration : Routes critiques
- E2E : Parcours utilisateur principal

### À tester obligatoirement
- Validation des codes
- Attribution des gains
- Authentification
- Limites et quotas

## PERFORMANCE

### Objectifs
- LCP < 2.5s
- FID < 100ms
- CLS < 0.1
- Support 10 000 users simultanés

### Optimisations requises
- Images WebP avec lazy loading
- Code splitting automatique
- Cache Redis sur endpoints fréquents
- Index DB sur requêtes critiques

## ACCESSIBILITÉ

### WCAG 2.1 AA minimum
- Contraste texte 4.5:1 minimum
- Navigation clavier complète
- Lecteurs d'écran supportés
- Focus visible sur tous les éléments

## RESPONSIVE

### Breakpoints
- Mobile : 375px
- Tablet : 768px
- Desktop : 1024px
- Large : 1440px

### Règles
- Mobile-first approach
- Touch targets minimum 44x44px
- Texte minimum 16px sur mobile

## GIT

### Conventions de commit
- feat: nouvelle fonctionnalité
- fix: correction de bug
- style: changements visuels
- refactor: refactoring code
- test: ajout de tests
- docs: documentation

### Branches
- main : production
- develop : développement
- feature/* : nouvelles fonctionnalités
- hotfix/* : corrections urgentes

## INTERDICTIONS ABSOLUES

❌ NE JAMAIS :
- Changer les couleurs de la charte
- Utiliser des polices différentes
- Stocker des secrets dans le code
- Faire des requêtes DB dans les composants
- Ignorer les erreurs TypeScript
- Déployer sans tests
- Modifier la répartition des gains
- Accepter plus de 500 000 codes
- Permettre la réutilisation d'un code
- Exposer des données sensibles dans les logs