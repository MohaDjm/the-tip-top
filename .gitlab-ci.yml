stages:
  - build
  - deploy

variables:
  PROJECT_PATH: "/home/gitlab-runner/the-tip-top"
  PRODUCTION_PATH: "/var/www/the-tip-top"

build:
  stage: build
  tags:
    - deploy
    - shell
  script:
    - git clone https://gitlab.com/MohaDjm/the-tip-top.git $PROJECT_PATH || true
    - cd $PROJECT_PATH
    - git reset --hard HEAD
    # Force remove problematic directories with sudo
    - sudo rm -rf frontend/.next_backup || true
    - sudo rm -rf frontend/.next || true
    - git clean -fd || true
    - git pull origin main
    
    # Frontend build
    - cd frontend
    - npm install
    # Build in temporary directory to avoid permission issues
    - mkdir -p /tmp/gitlab-build-frontend
    - cp -r . /tmp/gitlab-build-frontend/
    - cd /tmp/gitlab-build-frontend
    - npm run build
    # Copy build output back
    - mkdir -p $PROJECT_PATH/frontend/.next
    - cp -r .next/* $PROJECT_PATH/frontend/.next/ || true
    # Cleanup temp directory
    - rm -rf /tmp/gitlab-build-frontend
    
    # Backend build
    - cd $PROJECT_PATH/backend
    - cp .env.production .env
    - npm install
    - npx prisma db push --accept-data-loss
    - npx prisma generate
    - npm run build
  only:
    - main

deploy:production:
  stage: deploy
  tags:
    - deploy
    - shell
  script:
    - cd $PROJECT_PATH
    - git reset --hard HEAD
    # Force remove problematic directories with sudo
    - sudo rm -rf frontend/.next_backup || true
    - sudo rm -rf frontend/.next || true
    - git clean -fd || true
    - git pull origin main
    
    # Frontend build
    - cd frontend
    - npm install
    # Build in temporary directory to avoid permission issues
    - mkdir -p /tmp/gitlab-deploy-frontend
    - cp -r . /tmp/gitlab-deploy-frontend/
    - cd /tmp/gitlab-deploy-frontend
    - npm run build
    # Copy build output back
    - mkdir -p $PROJECT_PATH/frontend/.next
    - cp -r .next/* $PROJECT_PATH/frontend/.next/ || true
    # Cleanup temp directory
    - rm -rf /tmp/gitlab-deploy-frontend
    
    # Backend build
    - cd $PROJECT_PATH/backend
    - cp .env.production .env
    - npm install
    - npx prisma db push --accept-data-loss
    - npx prisma generate
    - npm run build
    
    # Copy built files to production directory
    - mkdir -p $PRODUCTION_PATH/frontend/.next
    - mkdir -p $PRODUCTION_PATH/backend/dist
    - cp -r $PROJECT_PATH/frontend/.next/* $PRODUCTION_PATH/frontend/.next/ || true
    - cp -r $PROJECT_PATH/backend/dist/* $PRODUCTION_PATH/backend/dist/ || true
    - cp -r $PROJECT_PATH/frontend/src $PRODUCTION_PATH/frontend/ || true
    - cp -r $PROJECT_PATH/backend/src $PRODUCTION_PATH/backend/ || true
    - cp $PROJECT_PATH/backend/package.json $PRODUCTION_PATH/backend/ || true
    - cp $PROJECT_PATH/frontend/package.json $PRODUCTION_PATH/frontend/ || true
    
    # Restart services
    - pm2 restart backend || echo "Backend restart failed, continuing..."
    - pm2 restart frontend || echo "Frontend restart failed, continuing..."
    - echo "✅ Deployment completed successfully!"
  environment:
    name: production
    url: http://164.68.103.88
  only:
    - main
  # when: manual  # Déploiement automatique activé
